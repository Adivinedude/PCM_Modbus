Setting the device address
	first connect it to a pc, 
	access the serial port, 
	then reset the device
	you have 5 seconds to move the potentiometer, 
		once values begin to print to the serial console 
		set it to the device address you want.
	valid values are 1-32.

The pot can be replaced by a voltage divider circuit to fix the address to a given value.

after setting the address, connect to your modbus client and start controlling the unit.
modbus points are at the end of this document

Order of Operations
	all paramaters should be loaded before setting the enable coil to "HIGH".
	once the enable coil is "HIGH" state the unit will ignore any changes to the input 
	coils and registers. These changes will take effect once the enable coil is set "LOW"

Setting the enable coil to LOW will immedatly stop pumping, reguardless of progress.
This can be done at any time. I strongly recommend that you have a way to stop the pump manualy.
Something like a big red friendly button that says "push to stop"

Using of physical feedback is possible with each pump within the unit.
Feedback signals must be below 2v for logic LOW and above 3.5v for logic HIGH.
Feedback signals must not excede 5V per ATmega329p Specs. See datasheet for more detail.
Feedback pulses should exceed 20ns to ensure the signal will be detected by the hardware

Calibration value: is the number of feedback pulses to dispence a single unit.
if using the "h_bridge" driver with a DC motor, internal feedback is in milliseconds
	with a servo, no effect
	with a stepper motor, the feedback is in steps.

your specific driver may very
This program was written to be ammended with driver.cpp files to suit your indiviual needs.

address - Register Type - Function

Pump 1
0x00 - coil - Enable the device. On/Off switch
0x01 - coil - Use Positive Feedback
0x02 - coil - Enable debug/direct control of the motors via communication.
0x03 - coil - Set or invert the direction of the motor
Pump 2
0x04 - coil - Enable the device. On/Off switch
0x05 - coil - Use Positive Feedback
0x06 - coil - Enable debug/direct control of the motors via communication.
0x07 - coil - Set or invert the direction of the motor
Pump 3
0x08 - coil - Enable the device. On/Off switch
0x09 - coil - Use Positive Feedback
0x0a - coil - Enable debug/direct control of the motors via communication.
0x0b - coil - Set or invert the direction of the motor
Pump 4
0x0c - coil - Enable the device. On/Off switch
0x0d - coil - Use Positive Feedback
0x0e - coil - Enable debug/direct control of the motors via communication.
0x0f - coil - Set or invert the direction of the motor

----------

0x00 - d_input - busy  Pump 1
0x01 - d_input - error Pump 1

0x02 - d_input - busy  Pump 2
0x03 - d_input - error Pump 2

0x04 - d_input - busy  Pump 3
0x05 - d_input - error Pump 3

0x06 - d_input - busy  Pump 4
0x07 - d_input - error Pump 4


----------These will vary by motor type selected. 
------DC Motor controlled by H-Bridge

Pump 1
0x00 - h_register - CALIBRATION value. "Second per Unit" or "Pulses per Unit"
0x01 - h_register - DURATION. How many seconds to dispense the dose
0x02 - h_register - DOSE. How many units to dispense
0x03 - h_register - Motor Type. see selected driver for options
Pump 2
0x04 - h_register - CALIBRATION
0x05 - h_register - DURATION
0x06 - h_register - DOSE
0x07 - h_register - Motor Type
Pump 3
0x08 - h_register - CALIBRATION
0x09 - h_register - DURATION
0x0A - h_register - DOSE
0x0B - h_register - Motor Type
Pump 4
0x0C - h_register - CALIBRATION
0x0D - h_register - DURATION
0x0E - h_register - DOSE
0x0F - h_register - Motor Type

----------

Pump 1
0x00 - i_register - TOTAL_FEEDBACK for this request
0x01 - i_register - CYCLES remaining for this request
0x02 - i_register - DOSE per cycle for this request
0x03 - i_register - TIMER_VALUE timer to track cycle duration
0x04 - i_register - TOTAL units dispensed

Pump 2
0x05 - i_register - TOTAL_FEEDBACK
0x06 - i_register - CYCLES
0x07 - i_register - DOSE
0x08 - i_register - TIMER_VALUE
0x09 - i_register - TOTAL

Pump 3
0x0a - i_register - TOTAL_FEEDBACK
0x0b - i_register - CYCLES
0x0c - i_register - DOSE
0x0d - i_register - TIMER_VALUE
0x0e - i_register - TOTAL

Pump 4
0x0f - i_register - TOTAL_FEEDBACK
0x10 - i_register - CYCLES
0x11 - i_register - DOSE
0x12 - i_register - TIMER_VALUE
0x13 - i_register - TOTAL

----------

Special Registers
0x14 - i_register - FreeRam. ammount of system memory currently available
0x15 - i_register - System Cycles per second. How fast the controller is processing
